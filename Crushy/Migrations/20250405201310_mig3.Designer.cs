// <auto-generated />
using System;
using Crushy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Crushy.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250405201310_mig3")]
    partial class mig3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Crushy.Models.BlockedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BlockedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("BlockedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlockedUserId");

                    b.HasIndex("UserId");

                    b.ToTable("BlockedUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlockedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BlockedUserId = 5,
                            CreatedAt = new DateTime(2025, 4, 3, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(1004),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            BlockedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BlockedUserId = 11,
                            CreatedAt = new DateTime(2025, 3, 31, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(1007),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 3,
                            BlockedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BlockedUserId = 12,
                            CreatedAt = new DateTime(2025, 4, 2, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(1009),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 4,
                            BlockedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BlockedUserId = 4,
                            CreatedAt = new DateTime(2025, 3, 29, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(1011),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Crushy.Models.MatchedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("MatchedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("User1Id")
                        .HasColumnType("int");

                    b.Property<int>("User2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("User1Id");

                    b.HasIndex("User2Id");

                    b.ToTable("MatchedUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MatchedAt = new DateTime(2025, 3, 26, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(187),
                            User1Id = 2,
                            User2Id = 3
                        },
                        new
                        {
                            Id = 2,
                            MatchedAt = new DateTime(2025, 3, 31, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(189),
                            User1Id = 4,
                            User2Id = 5
                        },
                        new
                        {
                            Id = 3,
                            MatchedAt = new DateTime(2025, 3, 21, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(191),
                            User1Id = 6,
                            User2Id = 7
                        },
                        new
                        {
                            Id = 4,
                            MatchedAt = new DateTime(2025, 3, 28, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(193),
                            User1Id = 8,
                            User2Id = 9
                        },
                        new
                        {
                            Id = 5,
                            MatchedAt = new DateTime(2025, 4, 2, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(194),
                            User1Id = 10,
                            User2Id = 11
                        },
                        new
                        {
                            Id = 6,
                            MatchedAt = new DateTime(2025, 3, 24, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(196),
                            User1Id = 2,
                            User2Id = 7
                        },
                        new
                        {
                            Id = 7,
                            MatchedAt = new DateTime(2025, 3, 29, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(198),
                            User1Id = 3,
                            User2Id = 8
                        },
                        new
                        {
                            Id = 8,
                            MatchedAt = new DateTime(2025, 3, 18, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(199),
                            User1Id = 13,
                            User2Id = 14
                        },
                        new
                        {
                            Id = 9,
                            MatchedAt = new DateTime(2025, 3, 20, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(220),
                            User1Id = 15,
                            User2Id = 16
                        },
                        new
                        {
                            Id = 10,
                            MatchedAt = new DateTime(2025, 3, 22, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(222),
                            User1Id = 17,
                            User2Id = 18
                        },
                        new
                        {
                            Id = 11,
                            MatchedAt = new DateTime(2025, 3, 24, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(223),
                            User1Id = 19,
                            User2Id = 20
                        },
                        new
                        {
                            Id = 12,
                            MatchedAt = new DateTime(2025, 3, 26, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(225),
                            User1Id = 21,
                            User2Id = 22
                        },
                        new
                        {
                            Id = 13,
                            MatchedAt = new DateTime(2025, 3, 27, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(227),
                            User1Id = 13,
                            User2Id = 16
                        },
                        new
                        {
                            Id = 14,
                            MatchedAt = new DateTime(2025, 3, 28, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(228),
                            User1Id = 15,
                            User2Id = 18
                        },
                        new
                        {
                            Id = 15,
                            MatchedAt = new DateTime(2025, 3, 29, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(230),
                            User1Id = 17,
                            User2Id = 20
                        },
                        new
                        {
                            Id = 16,
                            MatchedAt = new DateTime(2025, 3, 30, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(232),
                            User1Id = 19,
                            User2Id = 22
                        },
                        new
                        {
                            Id = 17,
                            MatchedAt = new DateTime(2025, 3, 31, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(233),
                            User1Id = 14,
                            User2Id = 21
                        },
                        new
                        {
                            Id = 18,
                            MatchedAt = new DateTime(2025, 3, 19, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(235),
                            User1Id = 13,
                            User2Id = 2
                        },
                        new
                        {
                            Id = 19,
                            MatchedAt = new DateTime(2025, 3, 21, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(236),
                            User1Id = 14,
                            User2Id = 3
                        },
                        new
                        {
                            Id = 20,
                            MatchedAt = new DateTime(2025, 3, 23, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(238),
                            User1Id = 15,
                            User2Id = 4
                        },
                        new
                        {
                            Id = 21,
                            MatchedAt = new DateTime(2025, 3, 25, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(241),
                            User1Id = 16,
                            User2Id = 5
                        },
                        new
                        {
                            Id = 22,
                            MatchedAt = new DateTime(2025, 3, 27, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(242),
                            User1Id = 17,
                            User2Id = 6
                        },
                        new
                        {
                            Id = 23,
                            MatchedAt = new DateTime(2025, 3, 29, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(244),
                            User1Id = 18,
                            User2Id = 7
                        },
                        new
                        {
                            Id = 24,
                            MatchedAt = new DateTime(2025, 3, 31, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(245),
                            User1Id = 19,
                            User2Id = 8
                        },
                        new
                        {
                            Id = 25,
                            MatchedAt = new DateTime(2025, 4, 2, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(247),
                            User1Id = 20,
                            User2Id = 9
                        },
                        new
                        {
                            Id = 26,
                            MatchedAt = new DateTime(2025, 4, 3, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(248),
                            User1Id = 21,
                            User2Id = 10
                        },
                        new
                        {
                            Id = 27,
                            MatchedAt = new DateTime(2025, 4, 4, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(250),
                            User1Id = 22,
                            User2Id = 11
                        });
                });

            modelBuilder.Entity("Crushy.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Merhaba, nasılsın?",
                            CreatedAt = new DateTime(2025, 3, 27, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(791),
                            IsDeleted = false,
                            ReceiverId = 3,
                            SenderId = 2,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Content = "İyiyim, teşekkürler! Sen nasılsın?",
                            CreatedAt = new DateTime(2025, 3, 27, 20, 18, 8, 642, DateTimeKind.Utc).AddTicks(796),
                            IsDeleted = false,
                            ReceiverId = 2,
                            SenderId = 3,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Content = "Selam! Profilini çok beğendim.",
                            CreatedAt = new DateTime(2025, 4, 1, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(799),
                            IsDeleted = false,
                            ReceiverId = 5,
                            SenderId = 4,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Content = "Teşekkür ederim, seninkini de beğendim!",
                            CreatedAt = new DateTime(2025, 4, 1, 20, 23, 8, 642, DateTimeKind.Utc).AddTicks(802),
                            IsDeleted = false,
                            ReceiverId = 4,
                            SenderId = 5,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Content = "Merhaba, burada yeni misin?",
                            CreatedAt = new DateTime(2025, 3, 22, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(804),
                            IsDeleted = false,
                            ReceiverId = 7,
                            SenderId = 6,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Content = "Evet, yeni kayıt oldum. Seni tanımaktan memnun oldum!",
                            CreatedAt = new DateTime(2025, 3, 22, 20, 28, 8, 642, DateTimeKind.Utc).AddTicks(806),
                            IsDeleted = false,
                            ReceiverId = 6,
                            SenderId = 7,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Content = "Selam! Hangi şehirde yaşıyorsun?",
                            CreatedAt = new DateTime(2025, 3, 29, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(808),
                            IsDeleted = false,
                            ReceiverId = 9,
                            SenderId = 8,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Content = "İstanbul'da yaşıyorum. Sen nerelisin?",
                            CreatedAt = new DateTime(2025, 3, 29, 20, 21, 8, 642, DateTimeKind.Utc).AddTicks(810),
                            IsDeleted = false,
                            ReceiverId = 8,
                            SenderId = 9,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Content = "Merhaba, hobilerin neler?",
                            CreatedAt = new DateTime(2025, 4, 3, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(813),
                            IsDeleted = false,
                            ReceiverId = 11,
                            SenderId = 10,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Content = "Merhaba! Yüzmeyi, kitap okumayı ve film izlemeyi seviyorum. Sen nelerden hoşlanırsın?",
                            CreatedAt = new DateTime(2025, 4, 3, 20, 33, 8, 642, DateTimeKind.Utc).AddTicks(816),
                            IsDeleted = false,
                            ReceiverId = 10,
                            SenderId = 11,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Content = "Merhaba, seni tanımaktan memnun oldum!",
                            CreatedAt = new DateTime(2025, 3, 25, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(859),
                            IsDeleted = false,
                            ReceiverId = 7,
                            SenderId = 2,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Content = "Ben de memnun oldum! Nasıl gidiyor?",
                            CreatedAt = new DateTime(2025, 3, 25, 20, 43, 8, 642, DateTimeKind.Utc).AddTicks(861),
                            IsDeleted = false,
                            ReceiverId = 2,
                            SenderId = 7,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Content = "Profilin çok ilgi çekici görünüyor. Nelerden hoşlanırsın?",
                            CreatedAt = new DateTime(2025, 3, 30, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(863),
                            IsDeleted = false,
                            ReceiverId = 8,
                            SenderId = 3,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Content = "Teşekkürler! Müzik dinlemeyi, yemek yapmayı ve doğada vakit geçirmeyi seviyorum.",
                            CreatedAt = new DateTime(2025, 3, 30, 20, 28, 8, 642, DateTimeKind.Utc).AddTicks(865),
                            IsDeleted = false,
                            ReceiverId = 3,
                            SenderId = 8,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Content = "Bu hafta sonu bir şeyler yapmak ister misin?",
                            CreatedAt = new DateTime(2025, 4, 3, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(868),
                            IsDeleted = false,
                            ReceiverId = 5,
                            SenderId = 4,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            Content = "Merhaba Ayşe, profilini inceledim ve ortak ilgi alanlarımız olduğunu fark ettim.",
                            CreatedAt = new DateTime(2025, 3, 18, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(870),
                            IsDeleted = false,
                            ReceiverId = 14,
                            SenderId = 13,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            Content = "Merhaba Ahmet, teşekkürler. Ben de senin profilini beğendim. Hangi ilgi alanlarından bahsediyorsun?",
                            CreatedAt = new DateTime(2025, 3, 18, 20, 33, 8, 642, DateTimeKind.Utc).AddTicks(872),
                            IsDeleted = false,
                            ReceiverId = 13,
                            SenderId = 14,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            Content = "Özellikle sinema ve müzik konusundaki zevklerimiz benziyor gibi. En sevdiğin film nedir?",
                            CreatedAt = new DateTime(2025, 3, 18, 20, 48, 8, 642, DateTimeKind.Utc).AddTicks(874),
                            IsDeleted = false,
                            ReceiverId = 14,
                            SenderId = 13,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            Content = "Merhaba Zeynep, Ankara'da yaşadığını gördüm. Hangi semtte oturuyorsun?",
                            CreatedAt = new DateTime(2025, 3, 20, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(876),
                            IsDeleted = false,
                            ReceiverId = 16,
                            SenderId = 15,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            Content = "Merhaba Mehmet, Çankaya'da yaşıyorum. Sen?",
                            CreatedAt = new DateTime(2025, 3, 20, 21, 13, 8, 642, DateTimeKind.Utc).AddTicks(878),
                            IsDeleted = false,
                            ReceiverId = 15,
                            SenderId = 16,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            Content = "Ben de Çankaya'dayım. Bu hafta sonu bir kahve içmek ister misin?",
                            CreatedAt = new DateTime(2025, 3, 21, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(881),
                            IsDeleted = false,
                            ReceiverId = 16,
                            SenderId = 15,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            Content = "Merhaba Elif, İzmir'de yeni mi yaşıyorsun?",
                            CreatedAt = new DateTime(2025, 3, 22, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(883),
                            IsDeleted = false,
                            ReceiverId = 18,
                            SenderId = 17,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            Content = "Merhaba Mustafa, hayır yaklaşık 3 yıldır buradayım. Sen?",
                            CreatedAt = new DateTime(2025, 3, 22, 20, 58, 8, 642, DateTimeKind.Utc).AddTicks(885),
                            IsDeleted = false,
                            ReceiverId = 17,
                            SenderId = 18,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            Content = "Ben 5 yıldır İzmir'deyim. En sevdiğin yer neresi şehirde?",
                            CreatedAt = new DateTime(2025, 3, 23, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(887),
                            IsDeleted = false,
                            ReceiverId = 18,
                            SenderId = 17,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            Content = "Merhaba Selin, fotoğrafın çok güzel. Nerede çekildi?",
                            CreatedAt = new DateTime(2025, 3, 25, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(890),
                            IsDeleted = false,
                            ReceiverId = 20,
                            SenderId = 19,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            Content = "Teşekkürler Emre, fotoğraf Antalya Kaleiçi'nde çekildi. Sen hiç gittin mi?",
                            CreatedAt = new DateTime(2025, 3, 25, 22, 13, 8, 642, DateTimeKind.Utc).AddTicks(892),
                            IsDeleted = false,
                            ReceiverId = 19,
                            SenderId = 20,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            Content = "Merhaba Ece, profilinde gördüğüm kadarıyla müzikle ilgileniyorsun. Hangi tür müzikleri seviyorsun?",
                            CreatedAt = new DateTime(2025, 3, 27, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(894),
                            IsDeleted = false,
                            ReceiverId = 22,
                            SenderId = 21,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            Content = "Merhaba Burak, evet müzik benim tutkum. Özellikle rock ve alternatif müzik dinlemeyi seviyorum. Sen?",
                            CreatedAt = new DateTime(2025, 3, 27, 20, 53, 8, 642, DateTimeKind.Utc).AddTicks(896),
                            IsDeleted = false,
                            ReceiverId = 21,
                            SenderId = 22,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            Content = "Hello Emma, I'm from Turkey. Would you like to practice Turkish with me?",
                            CreatedAt = new DateTime(2025, 3, 19, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(899),
                            IsDeleted = false,
                            ReceiverId = 2,
                            SenderId = 13,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            Content = "Hi Ahmet, sure I'd love to learn some Turkish! Can you teach me basic phrases?",
                            CreatedAt = new DateTime(2025, 3, 19, 21, 13, 8, 642, DateTimeKind.Utc).AddTicks(901),
                            IsDeleted = false,
                            ReceiverId = 13,
                            SenderId = 2,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            Content = "Hello James, I saw your profile. What brings you to this app?",
                            CreatedAt = new DateTime(2025, 3, 21, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(904),
                            IsDeleted = false,
                            ReceiverId = 3,
                            SenderId = 14,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            Content = "Hi Ayşe, I'm looking to meet new people from different cultures. How about you?",
                            CreatedAt = new DateTime(2025, 3, 21, 23, 13, 8, 642, DateTimeKind.Utc).AddTicks(906),
                            IsDeleted = false,
                            ReceiverId = 14,
                            SenderId = 3,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            Content = "Hello Oliver, your travel photos look amazing. Where was your favorite place?",
                            CreatedAt = new DateTime(2025, 3, 25, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(908),
                            IsDeleted = false,
                            ReceiverId = 5,
                            SenderId = 16,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            Content = "Hi Zeynep, thanks! I think my favorite was Turkey actually. I loved Istanbul!",
                            CreatedAt = new DateTime(2025, 3, 25, 22, 13, 8, 642, DateTimeKind.Utc).AddTicks(910),
                            IsDeleted = false,
                            ReceiverId = 16,
                            SenderId = 5,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            Content = "Hello Mia, I'd like to practice my English. Would you mind chatting?",
                            CreatedAt = new DateTime(2025, 3, 31, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(912),
                            IsDeleted = false,
                            ReceiverId = 8,
                            SenderId = 19,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            Content = "Hi Emre, I don't mind at all! Your English seems good already!",
                            CreatedAt = new DateTime(2025, 3, 31, 20, 43, 8, 642, DateTimeKind.Utc).AddTicks(914),
                            IsDeleted = false,
                            ReceiverId = 19,
                            SenderId = 8,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            Content = "Hello Liam, I see you're interested in photography. What kind of photos do you take?",
                            CreatedAt = new DateTime(2025, 4, 2, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(916),
                            IsDeleted = false,
                            ReceiverId = 9,
                            SenderId = 20,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            Content = "Hi Selin, I mostly do landscape and street photography. I'd love to visit Turkey someday for photos!",
                            CreatedAt = new DateTime(2025, 4, 2, 21, 13, 8, 642, DateTimeKind.Utc).AddTicks(918),
                            IsDeleted = false,
                            ReceiverId = 20,
                            SenderId = 9,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            Content = "Hello Emily, I noticed we matched recently. What are your hobbies?",
                            CreatedAt = new DateTime(2025, 4, 3, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(920),
                            IsDeleted = false,
                            ReceiverId = 10,
                            SenderId = 21,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            Content = "Hi Burak, I enjoy reading, hiking and trying new foods. How about you?",
                            CreatedAt = new DateTime(2025, 4, 4, 0, 13, 8, 642, DateTimeKind.Utc).AddTicks(922),
                            IsDeleted = false,
                            ReceiverId = 21,
                            SenderId = 10,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            Content = "Hello Ethan, are you planning to visit Turkey anytime soon?",
                            CreatedAt = new DateTime(2025, 4, 4, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(924),
                            IsDeleted = false,
                            ReceiverId = 11,
                            SenderId = 22,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            Content = "Hi Ece, actually I've been considering it. Any recommendations on places to visit?",
                            CreatedAt = new DateTime(2025, 4, 4, 22, 13, 8, 642, DateTimeKind.Utc).AddTicks(926),
                            IsDeleted = false,
                            ReceiverId = 22,
                            SenderId = 11,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            Content = "Definitely visit Istanbul, Cappadocia and the Turkish coast. When are you thinking of coming?",
                            CreatedAt = new DateTime(2025, 4, 4, 23, 13, 8, 642, DateTimeKind.Utc).AddTicks(928),
                            IsDeleted = false,
                            ReceiverId = 11,
                            SenderId = 22,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 44,
                            Content = "I'm looking at dates in summer. Maybe we could meet up if I visit?",
                            CreatedAt = new DateTime(2025, 4, 5, 0, 13, 8, 642, DateTimeKind.Utc).AddTicks(931),
                            IsDeleted = false,
                            ReceiverId = 22,
                            SenderId = 11,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 45,
                            Content = "That would be nice! Let me know your travel dates when you book.",
                            CreatedAt = new DateTime(2025, 4, 5, 1, 13, 8, 642, DateTimeKind.Utc).AddTicks(933),
                            IsDeleted = false,
                            ReceiverId = 11,
                            SenderId = 22,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Crushy.Models.SubscriptionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DurationInDays = 0,
                            Features = "Premium üyelik paketi",
                            Name = "Premium",
                            Price = 29.99m
                        },
                        new
                        {
                            Id = 2,
                            DurationInDays = 0,
                            Features = "EVO üyelik paketi",
                            Name = "EVO",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 3,
                            DurationInDays = 0,
                            Features = "Temel üyelik paketi",
                            Name = "Basic",
                            Price = 9.99m
                        });
                });

            modelBuilder.Entity("Crushy.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$K5AR6rLuKPdM6GYY.mdqPesJhmnWt/K5H1y8IH7nlVApNxvJ5k.QS",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$gP/AY1vJLFD42/KuWobX4u5F7yg2tz5y.E06SWAbPwbOC8/byxf8a",
                            Role = "VerifiedUser",
                            Username = "emma.wilson"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$NbkU051A0pxUIOuy52wFQeG45rRl0KLd0zzfqkZlZepdIh9D5Hhpe",
                            Role = "VerifiedUser",
                            Username = "james.smith"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$zuRjWYGiwXbucPryt3dMdu6qdOa4QOXhB2zNG5OQ.9QTr.TQIidoK",
                            Role = "VerifiedUser",
                            Username = "sophia.brown"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$8KBz3T8WTfmxqfaCErr6y.jGaPUAdMyrYsMVIf60wW5qIl2wVYPv.",
                            Role = "VerifiedUser",
                            Username = "oliver.taylor"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$1GEfwlMS6ViOx78ei/cUwuoTqhggurKadhezaSwoCYHrTYypBMnem",
                            Role = "VerifiedUser",
                            Username = "ava.johnson"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$HZcS./ikOjFZcpE3OOtugemXve.PYiopnBr7zp/REZ3XsgE2YqT7y",
                            Role = "VerifiedUser",
                            Username = "noah.williams"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$vI4tTx3FVZ5heRl/vUcluOSS562y1IdIeyoTe9RN6Mld8Uys6AHWm",
                            Role = "VerifiedUser",
                            Username = "mia.davis"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$dUUYx49TKvYiXkldf7jQaeiMFMvErD2xPPHoXsRy2G4zErjPV/86y",
                            Role = "VerifiedUser",
                            Username = "liam.garcia"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$fFVDBWhGSaV3XA4ZwR6SseqsE.8RQo0BxsG.DA7RyRzsduYVflApK",
                            Role = "VerifiedUser",
                            Username = "emily.miller"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$K96nFrb6qpLVN6TzZjVG6OnmvdTxLSyvndl9OkvAegpyHPEraDEA.",
                            Role = "User",
                            Username = "ethan.anderson"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$oqcr1Yy4Y85.K1f0P4YbhuK8KHTY6v8z9SWCr3i8EwS.BlhfOd4My",
                            Role = "User",
                            Username = "amelia.thomas"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$NWfKi9.Pcp213EDeTyNEYeZe4ZPA9N9ar68EHd.nnq1DBchPZh31y",
                            Role = "VerifiedUser",
                            Username = "ahmet.yilmaz"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$F/aXGiOggf4laDOBHEie1.r3G/06IZI6lyZKrP8NJT.XEpyqHXPUW",
                            Role = "VerifiedUser",
                            Username = "ayse.demir"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$oAFjjmS9WQ0iTe.lTibAvufeew748MhnuBZ0CiY1v8J6B4cJM/PnC",
                            Role = "VerifiedUser",
                            Username = "mehmet.kaya"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$cJNobZskGHPlBrzGuCkqOOIn9ZjOxrj1SzO9INpXM6gG/PTNZgNq2",
                            Role = "VerifiedUser",
                            Username = "zeynep.celik"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$VkGwPZbNb2eFwVD0AMpi5OPw5zrtQXCDbSt1xkXYSH9W9U23Ing8W",
                            Role = "VerifiedUser",
                            Username = "mustafa.sahin"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$D/DdDxpQozK31EYFOV9.1elwHvR/MAIZFSIzzN4530Ej.NTrfmNV.",
                            Role = "VerifiedUser",
                            Username = "elif.yildiz"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$ixzJRiFZv5lxDRuxVN4PX.B2TwLC3BnRzVpz.myxkoguaI/Bccx6O",
                            Role = "VerifiedUser",
                            Username = "emre.ozturk"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$Qgz1/TSDBzcabC08WOLaluHYpEu3zE3NdKn2S8BkrqO04BUKFP1PS",
                            Role = "VerifiedUser",
                            Username = "selin.aksoy"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$.P2x1ESKn.5Zh3zzBcQ7IupNonN/sFQsGTNeVn/V4jMNba/sXncvi",
                            Role = "VerifiedUser",
                            Username = "burak.korkmaz"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$iP24qvjLN0NzxwC0lBnnSOKhUTtaEFEOXTiNhIcaJkQBwlpv0tE0q",
                            Role = "VerifiedUser",
                            Username = "ece.aydin"
                        });
                });

            modelBuilder.Entity("Crushy.Models.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Coin")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Map")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Age = 35,
                            Coin = 1000,
                            Email = "admin@crushy.com",
                            Fullname = "Admin User",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/1.jpg",
                            Map = "40.7128,-74.0060"
                        },
                        new
                        {
                            UserId = 2,
                            Age = 28,
                            Coin = 50,
                            Email = "emma@example.com",
                            Fullname = "Emma Wilson",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/2.jpg",
                            Map = "51.5074,-0.1278"
                        },
                        new
                        {
                            UserId = 3,
                            Age = 32,
                            Coin = 75,
                            Email = "james@example.com",
                            Fullname = "James Smith",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/3.jpg",
                            Map = "48.8566,2.3522"
                        },
                        new
                        {
                            UserId = 4,
                            Age = 25,
                            Coin = 30,
                            Email = "sophia@example.com",
                            Fullname = "Sophia Brown",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/4.jpg",
                            Map = "52.5200,13.4050"
                        },
                        new
                        {
                            UserId = 5,
                            Age = 30,
                            Coin = 45,
                            Email = "oliver@example.com",
                            Fullname = "Oliver Taylor",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/5.jpg",
                            Map = "41.9028,12.4964"
                        },
                        new
                        {
                            UserId = 6,
                            Age = 24,
                            Coin = 60,
                            Email = "ava@example.com",
                            Fullname = "Ava Johnson",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/6.jpg",
                            Map = "34.0522,-118.2437"
                        },
                        new
                        {
                            UserId = 7,
                            Age = 29,
                            Coin = 55,
                            Email = "noah@example.com",
                            Fullname = "Noah Williams",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/7.jpg",
                            Map = "35.6762,139.6503"
                        },
                        new
                        {
                            UserId = 8,
                            Age = 27,
                            Coin = 40,
                            Email = "mia@example.com",
                            Fullname = "Mia Davis",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/8.jpg",
                            Map = "19.4326,-99.1332"
                        },
                        new
                        {
                            UserId = 9,
                            Age = 31,
                            Coin = 65,
                            Email = "liam@example.com",
                            Fullname = "Liam Garcia",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/9.jpg",
                            Map = "-33.8688,151.2093"
                        },
                        new
                        {
                            UserId = 10,
                            Age = 23,
                            Coin = 35,
                            Email = "emily@example.com",
                            Fullname = "Emily Miller",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/10.jpg",
                            Map = "55.7558,37.6173"
                        },
                        new
                        {
                            UserId = 11,
                            Age = 34,
                            Coin = 25,
                            Email = "ethan@example.com",
                            Fullname = "Ethan Anderson",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/11.jpg",
                            Map = "37.7749,-122.4194"
                        },
                        new
                        {
                            UserId = 12,
                            Age = 26,
                            Coin = 20,
                            Email = "amelia@example.com",
                            Fullname = "Amelia Thomas",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/12.jpg",
                            Map = "43.6532,-79.3832"
                        },
                        new
                        {
                            UserId = 13,
                            Age = 29,
                            Coin = 55,
                            Email = "ahmet@example.com",
                            Fullname = "Ahmet Yılmaz",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/22.jpg",
                            Map = "41.0082,28.9784"
                        },
                        new
                        {
                            UserId = 14,
                            Age = 25,
                            Coin = 45,
                            Email = "ayse@example.com",
                            Fullname = "Ayşe Demir",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/23.jpg",
                            Map = "41.0082,28.9784"
                        },
                        new
                        {
                            UserId = 15,
                            Age = 33,
                            Coin = 60,
                            Email = "mehmet@example.com",
                            Fullname = "Mehmet Kaya",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/24.jpg",
                            Map = "39.9208,32.8541"
                        },
                        new
                        {
                            UserId = 16,
                            Age = 27,
                            Coin = 50,
                            Email = "zeynep@example.com",
                            Fullname = "Zeynep Çelik",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/25.jpg",
                            Map = "39.9208,32.8541"
                        },
                        new
                        {
                            UserId = 17,
                            Age = 31,
                            Coin = 70,
                            Email = "mustafa@example.com",
                            Fullname = "Mustafa Şahin",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/26.jpg",
                            Map = "38.4237,27.1428"
                        },
                        new
                        {
                            UserId = 18,
                            Age = 24,
                            Coin = 40,
                            Email = "elif@example.com",
                            Fullname = "Elif Yıldız",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/27.jpg",
                            Map = "38.4237,27.1428"
                        },
                        new
                        {
                            UserId = 19,
                            Age = 28,
                            Coin = 65,
                            Email = "emre@example.com",
                            Fullname = "Emre Öztürk",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/28.jpg",
                            Map = "37.0000,35.3213"
                        },
                        new
                        {
                            UserId = 20,
                            Age = 26,
                            Coin = 55,
                            Email = "selin@example.com",
                            Fullname = "Selin Aksoy",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/29.jpg",
                            Map = "36.8841,30.7056"
                        },
                        new
                        {
                            UserId = 21,
                            Age = 32,
                            Coin = 75,
                            Email = "burak@example.com",
                            Fullname = "Burak Korkmaz",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/30.jpg",
                            Map = "40.1885,29.0610"
                        },
                        new
                        {
                            UserId = 22,
                            Age = 23,
                            Coin = 35,
                            Email = "ece@example.com",
                            Fullname = "Ece Aydın",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/31.jpg",
                            Map = "41.2867,36.3300"
                        });
                });

            modelBuilder.Entity("Crushy.Models.UserSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 6, 4, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(90),
                            PlanId = 1,
                            StartDate = new DateTime(2025, 3, 6, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(76),
                            Status = "active",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2025, 6, 19, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(94),
                            PlanId = 2,
                            StartDate = new DateTime(2025, 3, 21, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(93),
                            Status = "active",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2025, 5, 20, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(97),
                            PlanId = 1,
                            StartDate = new DateTime(2025, 2, 19, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(96),
                            Status = "active",
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2025, 5, 5, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(99),
                            PlanId = 2,
                            StartDate = new DateTime(2025, 2, 4, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(98),
                            Status = "active",
                            UserId = 7
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2025, 3, 6, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(101),
                            PlanId = 1,
                            StartDate = new DateTime(2025, 1, 5, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(101),
                            Status = "expired",
                            UserId = 9
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2025, 4, 25, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(104),
                            PlanId = 3,
                            StartDate = new DateTime(2025, 3, 26, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(103),
                            Status = "active",
                            UserId = 10
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2025, 5, 15, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(106),
                            PlanId = 1,
                            StartDate = new DateTime(2025, 3, 16, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(106),
                            Status = "active",
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateTime(2025, 6, 4, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(109),
                            PlanId = 2,
                            StartDate = new DateTime(2025, 3, 6, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(108),
                            Status = "active",
                            UserId = 15
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateTime(2025, 5, 20, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(111),
                            PlanId = 1,
                            StartDate = new DateTime(2025, 3, 21, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(110),
                            Status = "active",
                            UserId = 17
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateTime(2025, 4, 30, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(121),
                            PlanId = 3,
                            StartDate = new DateTime(2025, 3, 31, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(113),
                            Status = "active",
                            UserId = 19
                        },
                        new
                        {
                            Id = 11,
                            EndDate = new DateTime(2025, 5, 10, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(123),
                            PlanId = 2,
                            StartDate = new DateTime(2025, 3, 11, 20, 13, 8, 642, DateTimeKind.Utc).AddTicks(122),
                            Status = "active",
                            UserId = 21
                        });
                });

            modelBuilder.Entity("Crushy.Models.BlockedUser", b =>
                {
                    b.HasOne("Crushy.Models.User", "Blocked")
                        .WithMany()
                        .HasForeignKey("BlockedUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Crushy.Models.User", "User")
                        .WithMany("BlockedUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Blocked");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Crushy.Models.MatchedUser", b =>
                {
                    b.HasOne("Crushy.Models.User", "User1")
                        .WithMany("MatchesAsUser1")
                        .HasForeignKey("User1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Crushy.Models.User", "User2")
                        .WithMany("MatchesAsUser2")
                        .HasForeignKey("User2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User1");

                    b.Navigation("User2");
                });

            modelBuilder.Entity("Crushy.Models.Message", b =>
                {
                    b.HasOne("Crushy.Models.User", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Crushy.Models.User", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Crushy.Models.UserProfile", b =>
                {
                    b.HasOne("Crushy.Models.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("Crushy.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Crushy.Models.UserSubscription", b =>
                {
                    b.HasOne("Crushy.Models.SubscriptionPlan", "Plan")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Crushy.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Crushy.Models.SubscriptionPlan", b =>
                {
                    b.Navigation("UserSubscriptions");
                });

            modelBuilder.Entity("Crushy.Models.User", b =>
                {
                    b.Navigation("BlockedUsers");

                    b.Navigation("MatchesAsUser1");

                    b.Navigation("MatchesAsUser2");

                    b.Navigation("Profile")
                        .IsRequired();

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
