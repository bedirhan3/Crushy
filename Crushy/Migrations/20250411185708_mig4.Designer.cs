// <auto-generated />
using System;
using Crushy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Crushy.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250411185708_mig4")]
    partial class mig4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Crushy.Models.BlockedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BlockedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("BlockedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlockedUserId");

                    b.HasIndex("UserId");

                    b.ToTable("BlockedUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlockedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BlockedUserId = 5,
                            CreatedAt = new DateTime(2025, 4, 9, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2705),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            BlockedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BlockedUserId = 11,
                            CreatedAt = new DateTime(2025, 4, 6, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2706),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 3,
                            BlockedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BlockedUserId = 12,
                            CreatedAt = new DateTime(2025, 4, 8, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2708),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 4,
                            BlockedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BlockedUserId = 4,
                            CreatedAt = new DateTime(2025, 4, 4, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2709),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Crushy.Models.MatchedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("MatchedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("User1Id")
                        .HasColumnType("int");

                    b.Property<int>("User2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("User1Id");

                    b.HasIndex("User2Id");

                    b.ToTable("MatchedUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MatchedAt = new DateTime(2025, 4, 1, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2444),
                            User1Id = 2,
                            User2Id = 3
                        },
                        new
                        {
                            Id = 2,
                            MatchedAt = new DateTime(2025, 4, 6, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2446),
                            User1Id = 4,
                            User2Id = 5
                        },
                        new
                        {
                            Id = 3,
                            MatchedAt = new DateTime(2025, 3, 27, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2447),
                            User1Id = 6,
                            User2Id = 7
                        },
                        new
                        {
                            Id = 4,
                            MatchedAt = new DateTime(2025, 4, 3, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2448),
                            User1Id = 8,
                            User2Id = 9
                        },
                        new
                        {
                            Id = 5,
                            MatchedAt = new DateTime(2025, 4, 8, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2449),
                            User1Id = 10,
                            User2Id = 11
                        },
                        new
                        {
                            Id = 6,
                            MatchedAt = new DateTime(2025, 3, 30, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2450),
                            User1Id = 2,
                            User2Id = 7
                        },
                        new
                        {
                            Id = 7,
                            MatchedAt = new DateTime(2025, 4, 4, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2451),
                            User1Id = 3,
                            User2Id = 8
                        },
                        new
                        {
                            Id = 8,
                            MatchedAt = new DateTime(2025, 3, 24, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2452),
                            User1Id = 13,
                            User2Id = 14
                        },
                        new
                        {
                            Id = 9,
                            MatchedAt = new DateTime(2025, 3, 26, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2467),
                            User1Id = 15,
                            User2Id = 16
                        },
                        new
                        {
                            Id = 10,
                            MatchedAt = new DateTime(2025, 3, 28, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2479),
                            User1Id = 17,
                            User2Id = 18
                        },
                        new
                        {
                            Id = 11,
                            MatchedAt = new DateTime(2025, 3, 30, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2480),
                            User1Id = 19,
                            User2Id = 20
                        },
                        new
                        {
                            Id = 12,
                            MatchedAt = new DateTime(2025, 4, 1, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2481),
                            User1Id = 21,
                            User2Id = 22
                        },
                        new
                        {
                            Id = 13,
                            MatchedAt = new DateTime(2025, 4, 2, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2482),
                            User1Id = 13,
                            User2Id = 16
                        },
                        new
                        {
                            Id = 14,
                            MatchedAt = new DateTime(2025, 4, 3, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2483),
                            User1Id = 15,
                            User2Id = 18
                        },
                        new
                        {
                            Id = 15,
                            MatchedAt = new DateTime(2025, 4, 4, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2484),
                            User1Id = 17,
                            User2Id = 20
                        },
                        new
                        {
                            Id = 16,
                            MatchedAt = new DateTime(2025, 4, 5, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2485),
                            User1Id = 19,
                            User2Id = 22
                        },
                        new
                        {
                            Id = 17,
                            MatchedAt = new DateTime(2025, 4, 6, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2487),
                            User1Id = 14,
                            User2Id = 21
                        },
                        new
                        {
                            Id = 18,
                            MatchedAt = new DateTime(2025, 3, 25, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2488),
                            User1Id = 13,
                            User2Id = 2
                        },
                        new
                        {
                            Id = 19,
                            MatchedAt = new DateTime(2025, 3, 27, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2489),
                            User1Id = 14,
                            User2Id = 3
                        },
                        new
                        {
                            Id = 20,
                            MatchedAt = new DateTime(2025, 3, 29, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2490),
                            User1Id = 15,
                            User2Id = 4
                        },
                        new
                        {
                            Id = 21,
                            MatchedAt = new DateTime(2025, 3, 31, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2491),
                            User1Id = 16,
                            User2Id = 5
                        },
                        new
                        {
                            Id = 22,
                            MatchedAt = new DateTime(2025, 4, 2, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2492),
                            User1Id = 17,
                            User2Id = 6
                        },
                        new
                        {
                            Id = 23,
                            MatchedAt = new DateTime(2025, 4, 4, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2493),
                            User1Id = 18,
                            User2Id = 7
                        },
                        new
                        {
                            Id = 24,
                            MatchedAt = new DateTime(2025, 4, 6, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2494),
                            User1Id = 19,
                            User2Id = 8
                        },
                        new
                        {
                            Id = 25,
                            MatchedAt = new DateTime(2025, 4, 8, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2495),
                            User1Id = 20,
                            User2Id = 9
                        },
                        new
                        {
                            Id = 26,
                            MatchedAt = new DateTime(2025, 4, 9, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2496),
                            User1Id = 21,
                            User2Id = 10
                        },
                        new
                        {
                            Id = 27,
                            MatchedAt = new DateTime(2025, 4, 10, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2497),
                            User1Id = 22,
                            User2Id = 11
                        });
                });

            modelBuilder.Entity("Crushy.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IsRead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Merhaba, nasılsın?",
                            CreatedAt = new DateTime(2025, 4, 2, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2592),
                            IsDeleted = false,
                            ReceiverId = 3,
                            SenderId = 2,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Content = "İyiyim, teşekkürler! Sen nasılsın?",
                            CreatedAt = new DateTime(2025, 4, 2, 19, 2, 7, 946, DateTimeKind.Utc).AddTicks(2595),
                            IsDeleted = false,
                            ReceiverId = 2,
                            SenderId = 3,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Content = "Selam! Profilini çok beğendim.",
                            CreatedAt = new DateTime(2025, 4, 7, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2598),
                            IsDeleted = false,
                            ReceiverId = 5,
                            SenderId = 4,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Content = "Teşekkür ederim, seninkini de beğendim!",
                            CreatedAt = new DateTime(2025, 4, 7, 19, 7, 7, 946, DateTimeKind.Utc).AddTicks(2601),
                            IsDeleted = false,
                            ReceiverId = 4,
                            SenderId = 5,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Content = "Merhaba, burada yeni misin?",
                            CreatedAt = new DateTime(2025, 3, 28, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2602),
                            IsDeleted = false,
                            ReceiverId = 7,
                            SenderId = 6,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Content = "Evet, yeni kayıt oldum. Seni tanımaktan memnun oldum!",
                            CreatedAt = new DateTime(2025, 3, 28, 19, 12, 7, 946, DateTimeKind.Utc).AddTicks(2603),
                            IsDeleted = false,
                            ReceiverId = 6,
                            SenderId = 7,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Content = "Selam! Hangi şehirde yaşıyorsun?",
                            CreatedAt = new DateTime(2025, 4, 4, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2605),
                            IsDeleted = false,
                            ReceiverId = 9,
                            SenderId = 8,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Content = "İstanbul'da yaşıyorum. Sen nerelisin?",
                            CreatedAt = new DateTime(2025, 4, 4, 19, 5, 7, 946, DateTimeKind.Utc).AddTicks(2606),
                            IsDeleted = false,
                            ReceiverId = 8,
                            SenderId = 9,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Content = "Merhaba, hobilerin neler?",
                            CreatedAt = new DateTime(2025, 4, 9, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2607),
                            IsDeleted = false,
                            ReceiverId = 11,
                            SenderId = 10,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Content = "Merhaba! Yüzmeyi, kitap okumayı ve film izlemeyi seviyorum. Sen nelerden hoşlanırsın?",
                            CreatedAt = new DateTime(2025, 4, 9, 19, 17, 7, 946, DateTimeKind.Utc).AddTicks(2608),
                            IsDeleted = false,
                            ReceiverId = 10,
                            SenderId = 11,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Content = "Merhaba, seni tanımaktan memnun oldum!",
                            CreatedAt = new DateTime(2025, 3, 31, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2610),
                            IsDeleted = false,
                            ReceiverId = 7,
                            SenderId = 2,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Content = "Ben de memnun oldum! Nasıl gidiyor?",
                            CreatedAt = new DateTime(2025, 3, 31, 19, 27, 7, 946, DateTimeKind.Utc).AddTicks(2611),
                            IsDeleted = false,
                            ReceiverId = 2,
                            SenderId = 7,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Content = "Profilin çok ilgi çekici görünüyor. Nelerden hoşlanırsın?",
                            CreatedAt = new DateTime(2025, 4, 5, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2612),
                            IsDeleted = false,
                            ReceiverId = 8,
                            SenderId = 3,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Content = "Teşekkürler! Müzik dinlemeyi, yemek yapmayı ve doğada vakit geçirmeyi seviyorum.",
                            CreatedAt = new DateTime(2025, 4, 5, 19, 12, 7, 946, DateTimeKind.Utc).AddTicks(2614),
                            IsDeleted = false,
                            ReceiverId = 3,
                            SenderId = 8,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Content = "Bu hafta sonu bir şeyler yapmak ister misin?",
                            CreatedAt = new DateTime(2025, 4, 9, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2615),
                            IsDeleted = false,
                            ReceiverId = 5,
                            SenderId = 4,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            Content = "Merhaba Ayşe, profilini inceledim ve ortak ilgi alanlarımız olduğunu fark ettim.",
                            CreatedAt = new DateTime(2025, 3, 24, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2616),
                            IsDeleted = false,
                            ReceiverId = 14,
                            SenderId = 13,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            Content = "Merhaba Ahmet, teşekkürler. Ben de senin profilini beğendim. Hangi ilgi alanlarından bahsediyorsun?",
                            CreatedAt = new DateTime(2025, 3, 24, 19, 17, 7, 946, DateTimeKind.Utc).AddTicks(2617),
                            IsDeleted = false,
                            ReceiverId = 13,
                            SenderId = 14,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            Content = "Özellikle sinema ve müzik konusundaki zevklerimiz benziyor gibi. En sevdiğin film nedir?",
                            CreatedAt = new DateTime(2025, 3, 24, 19, 32, 7, 946, DateTimeKind.Utc).AddTicks(2619),
                            IsDeleted = false,
                            ReceiverId = 14,
                            SenderId = 13,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            Content = "Merhaba Zeynep, Ankara'da yaşadığını gördüm. Hangi semtte oturuyorsun?",
                            CreatedAt = new DateTime(2025, 3, 26, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2620),
                            IsDeleted = false,
                            ReceiverId = 16,
                            SenderId = 15,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            Content = "Merhaba Mehmet, Çankaya'da yaşıyorum. Sen?",
                            CreatedAt = new DateTime(2025, 3, 26, 19, 57, 7, 946, DateTimeKind.Utc).AddTicks(2621),
                            IsDeleted = false,
                            ReceiverId = 15,
                            SenderId = 16,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            Content = "Ben de Çankaya'dayım. Bu hafta sonu bir kahve içmek ister misin?",
                            CreatedAt = new DateTime(2025, 3, 27, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2625),
                            IsDeleted = false,
                            ReceiverId = 16,
                            SenderId = 15,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            Content = "Merhaba Elif, İzmir'de yeni mi yaşıyorsun?",
                            CreatedAt = new DateTime(2025, 3, 28, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2626),
                            IsDeleted = false,
                            ReceiverId = 18,
                            SenderId = 17,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            Content = "Merhaba Mustafa, hayır yaklaşık 3 yıldır buradayım. Sen?",
                            CreatedAt = new DateTime(2025, 3, 28, 19, 42, 7, 946, DateTimeKind.Utc).AddTicks(2627),
                            IsDeleted = false,
                            ReceiverId = 17,
                            SenderId = 18,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            Content = "Ben 5 yıldır İzmir'deyim. En sevdiğin yer neresi şehirde?",
                            CreatedAt = new DateTime(2025, 3, 29, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2629),
                            IsDeleted = false,
                            ReceiverId = 18,
                            SenderId = 17,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            Content = "Merhaba Selin, fotoğrafın çok güzel. Nerede çekildi?",
                            CreatedAt = new DateTime(2025, 3, 31, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2630),
                            IsDeleted = false,
                            ReceiverId = 20,
                            SenderId = 19,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            Content = "Teşekkürler Emre, fotoğraf Antalya Kaleiçi'nde çekildi. Sen hiç gittin mi?",
                            CreatedAt = new DateTime(2025, 3, 31, 20, 57, 7, 946, DateTimeKind.Utc).AddTicks(2631),
                            IsDeleted = false,
                            ReceiverId = 19,
                            SenderId = 20,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            Content = "Merhaba Ece, profilinde gördüğüm kadarıyla müzikle ilgileniyorsun. Hangi tür müzikleri seviyorsun?",
                            CreatedAt = new DateTime(2025, 4, 2, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2632),
                            IsDeleted = false,
                            ReceiverId = 22,
                            SenderId = 21,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            Content = "Merhaba Burak, evet müzik benim tutkum. Özellikle rock ve alternatif müzik dinlemeyi seviyorum. Sen?",
                            CreatedAt = new DateTime(2025, 4, 2, 19, 37, 7, 946, DateTimeKind.Utc).AddTicks(2634),
                            IsDeleted = false,
                            ReceiverId = 21,
                            SenderId = 22,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            Content = "Hello Emma, I'm from Turkey. Would you like to practice Turkish with me?",
                            CreatedAt = new DateTime(2025, 3, 25, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2635),
                            IsDeleted = false,
                            ReceiverId = 2,
                            SenderId = 13,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            Content = "Hi Ahmet, sure I'd love to learn some Turkish! Can you teach me basic phrases?",
                            CreatedAt = new DateTime(2025, 3, 25, 19, 57, 7, 946, DateTimeKind.Utc).AddTicks(2636),
                            IsDeleted = false,
                            ReceiverId = 13,
                            SenderId = 2,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            Content = "Hello James, I saw your profile. What brings you to this app?",
                            CreatedAt = new DateTime(2025, 3, 27, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2637),
                            IsDeleted = false,
                            ReceiverId = 3,
                            SenderId = 14,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            Content = "Hi Ayşe, I'm looking to meet new people from different cultures. How about you?",
                            CreatedAt = new DateTime(2025, 3, 27, 21, 57, 7, 946, DateTimeKind.Utc).AddTicks(2639),
                            IsDeleted = false,
                            ReceiverId = 14,
                            SenderId = 3,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            Content = "Hello Oliver, your travel photos look amazing. Where was your favorite place?",
                            CreatedAt = new DateTime(2025, 3, 31, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2640),
                            IsDeleted = false,
                            ReceiverId = 5,
                            SenderId = 16,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            Content = "Hi Zeynep, thanks! I think my favorite was Turkey actually. I loved Istanbul!",
                            CreatedAt = new DateTime(2025, 3, 31, 20, 57, 7, 946, DateTimeKind.Utc).AddTicks(2641),
                            IsDeleted = false,
                            ReceiverId = 16,
                            SenderId = 5,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            Content = "Hello Mia, I'd like to practice my English. Would you mind chatting?",
                            CreatedAt = new DateTime(2025, 4, 6, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2642),
                            IsDeleted = false,
                            ReceiverId = 8,
                            SenderId = 19,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            Content = "Hi Emre, I don't mind at all! Your English seems good already!",
                            CreatedAt = new DateTime(2025, 4, 6, 19, 27, 7, 946, DateTimeKind.Utc).AddTicks(2644),
                            IsDeleted = false,
                            ReceiverId = 19,
                            SenderId = 8,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            Content = "Hello Liam, I see you're interested in photography. What kind of photos do you take?",
                            CreatedAt = new DateTime(2025, 4, 8, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2646),
                            IsDeleted = false,
                            ReceiverId = 9,
                            SenderId = 20,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            Content = "Hi Selin, I mostly do landscape and street photography. I'd love to visit Turkey someday for photos!",
                            CreatedAt = new DateTime(2025, 4, 8, 19, 57, 7, 946, DateTimeKind.Utc).AddTicks(2648),
                            IsDeleted = false,
                            ReceiverId = 20,
                            SenderId = 9,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            Content = "Hello Emily, I noticed we matched recently. What are your hobbies?",
                            CreatedAt = new DateTime(2025, 4, 9, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2649),
                            IsDeleted = false,
                            ReceiverId = 10,
                            SenderId = 21,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            Content = "Hi Burak, I enjoy reading, hiking and trying new foods. How about you?",
                            CreatedAt = new DateTime(2025, 4, 9, 22, 57, 7, 946, DateTimeKind.Utc).AddTicks(2650),
                            IsDeleted = false,
                            ReceiverId = 21,
                            SenderId = 10,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            Content = "Hello Ethan, are you planning to visit Turkey anytime soon?",
                            CreatedAt = new DateTime(2025, 4, 10, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2651),
                            IsDeleted = false,
                            ReceiverId = 11,
                            SenderId = 22,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            Content = "Hi Ece, actually I've been considering it. Any recommendations on places to visit?",
                            CreatedAt = new DateTime(2025, 4, 10, 20, 57, 7, 946, DateTimeKind.Utc).AddTicks(2653),
                            IsDeleted = false,
                            ReceiverId = 22,
                            SenderId = 11,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            Content = "Definitely visit Istanbul, Cappadocia and the Turkish coast. When are you thinking of coming?",
                            CreatedAt = new DateTime(2025, 4, 10, 21, 57, 7, 946, DateTimeKind.Utc).AddTicks(2654),
                            IsDeleted = false,
                            ReceiverId = 11,
                            SenderId = 22,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 44,
                            Content = "I'm looking at dates in summer. Maybe we could meet up if I visit?",
                            CreatedAt = new DateTime(2025, 4, 10, 22, 57, 7, 946, DateTimeKind.Utc).AddTicks(2655),
                            IsDeleted = false,
                            ReceiverId = 22,
                            SenderId = 11,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 45,
                            Content = "That would be nice! Let me know your travel dates when you book.",
                            CreatedAt = new DateTime(2025, 4, 10, 23, 57, 7, 946, DateTimeKind.Utc).AddTicks(2657),
                            IsDeleted = false,
                            ReceiverId = 11,
                            SenderId = 22,
                            SentAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Crushy.Models.SubscriptionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DurationInDays = 0,
                            Features = "Premium üyelik paketi",
                            Name = "Premium",
                            Price = 29.99m
                        },
                        new
                        {
                            Id = 2,
                            DurationInDays = 0,
                            Features = "EVO üyelik paketi",
                            Name = "EVO",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 3,
                            DurationInDays = 0,
                            Features = "Temel üyelik paketi",
                            Name = "Basic",
                            Price = 9.99m
                        });
                });

            modelBuilder.Entity("Crushy.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$0bvoP4IgWeU7xO40tVVUO.A1oVFZl4rlCtEZnntUn1u9m1bpOAILi",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$j2bVd2qBvvhFGHzHOFP85e614cOZ/vFmDE8fBBVXz7vKK10JxQOiq",
                            Role = "VerifiedUser",
                            Username = "emma.wilson"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$bzDVmCGVd0V3enHnrq2Hb.gf4B6ISp0.GprNVOhj450fJSCBuk3y.",
                            Role = "VerifiedUser",
                            Username = "james.smith"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$39Iml8f/.Sy22lXpxRMNbOaeJ../Dd/X3IRu61xHJawNF9xz0p0IG",
                            Role = "VerifiedUser",
                            Username = "sophia.brown"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$zoJGFd.3urxz0AjVmzkqEOefor0IygiJelin9Q9tc1HMtFX1kVagG",
                            Role = "VerifiedUser",
                            Username = "oliver.taylor"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$RHhC3RNRDy7Gx2vhraEBMO3.jlyV4HgRisGtZShKQw9TEYPdCTjTC",
                            Role = "VerifiedUser",
                            Username = "ava.johnson"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$HfH3U78mtN3I6nUkYdUkbef/1er94Zi.1AYxAZtJpzHA3k80ernxS",
                            Role = "VerifiedUser",
                            Username = "noah.williams"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$Z5ak.iUPWYjdaZ6ZKQZmquyg2Yf3rG6xTaeVZR7y45KZjkeXkN7h2",
                            Role = "VerifiedUser",
                            Username = "mia.davis"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$72IieO0WyuZm3vZXGQ7yE.VxIpisyhL/ABZqaMbnyHwTw3dbTJCFS",
                            Role = "VerifiedUser",
                            Username = "liam.garcia"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$0cFoglIBCSVC8l08vEwS7.89s2FUSgllAQmqPw6tz9Rtg.iwKRPIG",
                            Role = "VerifiedUser",
                            Username = "emily.miller"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$tV.F1O6pjMPrGm00SoRh/.IgouQKfQ3bhz2Ljt0Iq1CT9NDksjcgm",
                            Role = "User",
                            Username = "ethan.anderson"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$GJorio30YmEMgvtkMu5P3e3/ex4MXoI4RNA/p4vffAJQ5OoYRYRdS",
                            Role = "User",
                            Username = "amelia.thomas"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$hiOUHwKjWVzlTeShNbaS0uLV7RpEWD37Smdrx38Co3r8htbtwBK3O",
                            Role = "VerifiedUser",
                            Username = "ahmet.yilmaz"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$e7ZrhdxnEVtloPyKjDy0Eu0q/.6PWsy9PFbQh4WCsKc.MFy22Me0u",
                            Role = "VerifiedUser",
                            Username = "ayse.demir"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$vruFJZrN6CphkejXt8o4nuS9MTnNeNamsJQakwtk1XdzR4.VDEGn2",
                            Role = "VerifiedUser",
                            Username = "mehmet.kaya"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$khtK62nLNyWoVd1E7puovOU8MTPSc2sz/2cZ6vkkpz84oxTStHSn2",
                            Role = "VerifiedUser",
                            Username = "zeynep.celik"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$DluF0mzSopoNScCa/zHAduUSLPL2/rM5r45gbOvC.fQw.IEIFjXPO",
                            Role = "VerifiedUser",
                            Username = "mustafa.sahin"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$yB5CD.cBNUXX6VBjCGxshei6qF56VKzFQmQu.ARUA1.DGcfHDE8fG",
                            Role = "VerifiedUser",
                            Username = "elif.yildiz"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$YYN2tbZKcQ6U1nIJMPnox.oIHbKe5bGG.8bKJHKBYM6fjEYIpzZSW",
                            Role = "VerifiedUser",
                            Username = "emre.ozturk"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$ofXlNTP5FapQorm/fKnBmuhHLEs8Gwa6fl3Tm8D6o6zGSiFGIOWdW",
                            Role = "VerifiedUser",
                            Username = "selin.aksoy"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$qZIS8mps9Um//OVmb.i7d.Qf9NIR3UQb/PTdoD6FZALJMvMV.rbAS",
                            Role = "VerifiedUser",
                            Username = "burak.korkmaz"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Password = "$2a$11$B8k48G/yBHi2sazipEAO0OQuKrBBkmdJ.uhwDVd1YELtgdCnARode",
                            Role = "VerifiedUser",
                            Username = "ece.aydin"
                        });
                });

            modelBuilder.Entity("Crushy.Models.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Coin")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Map")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Age = 35,
                            Coin = 1000,
                            Email = "admin@crushy.com",
                            Fullname = "Admin User",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/1.jpg",
                            Map = "40.7128,-74.0060"
                        },
                        new
                        {
                            UserId = 2,
                            Age = 28,
                            Coin = 50,
                            Email = "emma@example.com",
                            Fullname = "Emma Wilson",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/2.jpg",
                            Map = "51.5074,-0.1278"
                        },
                        new
                        {
                            UserId = 3,
                            Age = 32,
                            Coin = 75,
                            Email = "james@example.com",
                            Fullname = "James Smith",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/3.jpg",
                            Map = "48.8566,2.3522"
                        },
                        new
                        {
                            UserId = 4,
                            Age = 25,
                            Coin = 30,
                            Email = "sophia@example.com",
                            Fullname = "Sophia Brown",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/4.jpg",
                            Map = "52.5200,13.4050"
                        },
                        new
                        {
                            UserId = 5,
                            Age = 30,
                            Coin = 45,
                            Email = "oliver@example.com",
                            Fullname = "Oliver Taylor",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/5.jpg",
                            Map = "41.9028,12.4964"
                        },
                        new
                        {
                            UserId = 6,
                            Age = 24,
                            Coin = 60,
                            Email = "ava@example.com",
                            Fullname = "Ava Johnson",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/6.jpg",
                            Map = "34.0522,-118.2437"
                        },
                        new
                        {
                            UserId = 7,
                            Age = 29,
                            Coin = 55,
                            Email = "noah@example.com",
                            Fullname = "Noah Williams",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/7.jpg",
                            Map = "35.6762,139.6503"
                        },
                        new
                        {
                            UserId = 8,
                            Age = 27,
                            Coin = 40,
                            Email = "mia@example.com",
                            Fullname = "Mia Davis",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/8.jpg",
                            Map = "19.4326,-99.1332"
                        },
                        new
                        {
                            UserId = 9,
                            Age = 31,
                            Coin = 65,
                            Email = "liam@example.com",
                            Fullname = "Liam Garcia",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/9.jpg",
                            Map = "-33.8688,151.2093"
                        },
                        new
                        {
                            UserId = 10,
                            Age = 23,
                            Coin = 35,
                            Email = "emily@example.com",
                            Fullname = "Emily Miller",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/10.jpg",
                            Map = "55.7558,37.6173"
                        },
                        new
                        {
                            UserId = 11,
                            Age = 34,
                            Coin = 25,
                            Email = "ethan@example.com",
                            Fullname = "Ethan Anderson",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/11.jpg",
                            Map = "37.7749,-122.4194"
                        },
                        new
                        {
                            UserId = 12,
                            Age = 26,
                            Coin = 20,
                            Email = "amelia@example.com",
                            Fullname = "Amelia Thomas",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/12.jpg",
                            Map = "43.6532,-79.3832"
                        },
                        new
                        {
                            UserId = 13,
                            Age = 29,
                            Coin = 55,
                            Email = "ahmet@example.com",
                            Fullname = "Ahmet Yılmaz",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/22.jpg",
                            Map = "41.0082,28.9784"
                        },
                        new
                        {
                            UserId = 14,
                            Age = 25,
                            Coin = 45,
                            Email = "ayse@example.com",
                            Fullname = "Ayşe Demir",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/23.jpg",
                            Map = "41.0082,28.9784"
                        },
                        new
                        {
                            UserId = 15,
                            Age = 33,
                            Coin = 60,
                            Email = "mehmet@example.com",
                            Fullname = "Mehmet Kaya",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/24.jpg",
                            Map = "39.9208,32.8541"
                        },
                        new
                        {
                            UserId = 16,
                            Age = 27,
                            Coin = 50,
                            Email = "zeynep@example.com",
                            Fullname = "Zeynep Çelik",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/25.jpg",
                            Map = "39.9208,32.8541"
                        },
                        new
                        {
                            UserId = 17,
                            Age = 31,
                            Coin = 70,
                            Email = "mustafa@example.com",
                            Fullname = "Mustafa Şahin",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/26.jpg",
                            Map = "38.4237,27.1428"
                        },
                        new
                        {
                            UserId = 18,
                            Age = 24,
                            Coin = 40,
                            Email = "elif@example.com",
                            Fullname = "Elif Yıldız",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/27.jpg",
                            Map = "38.4237,27.1428"
                        },
                        new
                        {
                            UserId = 19,
                            Age = 28,
                            Coin = 65,
                            Email = "emre@example.com",
                            Fullname = "Emre Öztürk",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/28.jpg",
                            Map = "37.0000,35.3213"
                        },
                        new
                        {
                            UserId = 20,
                            Age = 26,
                            Coin = 55,
                            Email = "selin@example.com",
                            Fullname = "Selin Aksoy",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/29.jpg",
                            Map = "36.8841,30.7056"
                        },
                        new
                        {
                            UserId = 21,
                            Age = 32,
                            Coin = 75,
                            Email = "burak@example.com",
                            Fullname = "Burak Korkmaz",
                            Gender = true,
                            ImageUrl = "https://randomuser.me/api/portraits/men/30.jpg",
                            Map = "40.1885,29.0610"
                        },
                        new
                        {
                            UserId = 22,
                            Age = 23,
                            Coin = 35,
                            Email = "ece@example.com",
                            Fullname = "Ece Aydın",
                            Gender = false,
                            ImageUrl = "https://randomuser.me/api/portraits/women/31.jpg",
                            Map = "41.2867,36.3300"
                        });
                });

            modelBuilder.Entity("Crushy.Models.UserSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 6, 10, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2372),
                            PlanId = 1,
                            StartDate = new DateTime(2025, 3, 12, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2357),
                            Status = "active",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2025, 6, 25, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2375),
                            PlanId = 2,
                            StartDate = new DateTime(2025, 3, 27, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2374),
                            Status = "active",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2025, 5, 26, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2376),
                            PlanId = 1,
                            StartDate = new DateTime(2025, 2, 25, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2376),
                            Status = "active",
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2025, 5, 11, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2378),
                            PlanId = 2,
                            StartDate = new DateTime(2025, 2, 10, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2378),
                            Status = "active",
                            UserId = 7
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2025, 3, 12, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2380),
                            PlanId = 1,
                            StartDate = new DateTime(2025, 1, 11, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2379),
                            Status = "expired",
                            UserId = 9
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2025, 5, 1, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2382),
                            PlanId = 3,
                            StartDate = new DateTime(2025, 4, 1, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2381),
                            Status = "active",
                            UserId = 10
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2025, 5, 21, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2384),
                            PlanId = 1,
                            StartDate = new DateTime(2025, 3, 22, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2383),
                            Status = "active",
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateTime(2025, 6, 10, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2385),
                            PlanId = 2,
                            StartDate = new DateTime(2025, 3, 12, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2385),
                            Status = "active",
                            UserId = 15
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateTime(2025, 5, 26, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2388),
                            PlanId = 1,
                            StartDate = new DateTime(2025, 3, 27, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2387),
                            Status = "active",
                            UserId = 17
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateTime(2025, 5, 6, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2397),
                            PlanId = 3,
                            StartDate = new DateTime(2025, 4, 6, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2389),
                            Status = "active",
                            UserId = 19
                        },
                        new
                        {
                            Id = 11,
                            EndDate = new DateTime(2025, 5, 16, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2399),
                            PlanId = 2,
                            StartDate = new DateTime(2025, 3, 17, 18, 57, 7, 946, DateTimeKind.Utc).AddTicks(2398),
                            Status = "active",
                            UserId = 21
                        });
                });

            modelBuilder.Entity("Crushy.Models.BlockedUser", b =>
                {
                    b.HasOne("Crushy.Models.User", "Blocked")
                        .WithMany()
                        .HasForeignKey("BlockedUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Crushy.Models.User", "User")
                        .WithMany("BlockedUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Blocked");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Crushy.Models.MatchedUser", b =>
                {
                    b.HasOne("Crushy.Models.User", "User1")
                        .WithMany("MatchesAsUser1")
                        .HasForeignKey("User1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Crushy.Models.User", "User2")
                        .WithMany("MatchesAsUser2")
                        .HasForeignKey("User2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User1");

                    b.Navigation("User2");
                });

            modelBuilder.Entity("Crushy.Models.Message", b =>
                {
                    b.HasOne("Crushy.Models.User", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Crushy.Models.User", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Crushy.Models.UserProfile", b =>
                {
                    b.HasOne("Crushy.Models.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("Crushy.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Crushy.Models.UserSubscription", b =>
                {
                    b.HasOne("Crushy.Models.SubscriptionPlan", "Plan")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Crushy.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Crushy.Models.SubscriptionPlan", b =>
                {
                    b.Navigation("UserSubscriptions");
                });

            modelBuilder.Entity("Crushy.Models.User", b =>
                {
                    b.Navigation("BlockedUsers");

                    b.Navigation("MatchesAsUser1");

                    b.Navigation("MatchesAsUser2");

                    b.Navigation("Profile")
                        .IsRequired();

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
